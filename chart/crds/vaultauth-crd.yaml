# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: vaultauths.secrets.hashicorp.com
spec:
  group: secrets.hashicorp.com
  names:
    kind: VaultAuth
    listKind: VaultAuthList
    plural: vaultauths
    singular: vaultauth
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultAuth is the Schema for the vaultauths API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultAuthSpec defines the desired state of VaultAuth
            properties:
              approle:
                description: AppRole specific auth configuration, requires that the
                  Method be set to approle.
                properties:
                  cidr_list:
                    description: CidrList - List of CIDR blocks enforcing secret IDs
                      to be used from specific set of IP addresses. If secret_id_bound_cidrs
                      is set on the role, then the list of CIDR blocks listed here
                      should be a subset of the CIDR blocks listed on the role.
                    items:
                      type: string
                    type: array
                  metadata:
                    description: Metadata to be tied to the SecretID. This should
                      be a JSON-formatted string containing the metadata in key-value
                      pairs. This metadata will be set on tokens issued with this
                      SecretID, and is logged in audit logs in plaintext.
                    type: string
                  num_uses:
                    description: NumUses - Number of times this SecretID can be used,
                      after which the SecretID expires. A value of zero will allow
                      unlimited uses. Overrides secret_id_num_uses role option when
                      supplied. May not be higher than role's secret_id_num_uses.
                    type: integer
                  role:
                    description: Role (role_name) to use for authenticating to Vault.
                    type: string
                  secret_id:
                    type: string
                  token_bound_cidrs:
                    description: TokenBoundCidrs - list of CIDR blocks; if set, specifies
                      blocks of IP addresses which can use the auth tokens generated
                      by this SecretID. Overrides any role-set value but must be a
                      subset.
                    items:
                      type: string
                    type: array
                  ttl:
                    description: TTL - Duration in seconds (3600) or an integer time
                      unit (60m) after which this SecretID expires. A value of zero
                      will allow the SecretID to not expire. Overrides secret_id_ttl
                      role option when supplied. May not be longer than role's secret_id_ttl.
                    type: string
                type: object
              headers:
                additionalProperties:
                  type: string
                description: Headers to be included in all Vault requests.
                type: object
              jwt:
                description: Jwt specific auth configuration, requires that the Method
                  be set to jwt.
                properties:
                  audiences:
                    description: TokenAudiences to include in the ServiceAccount token.
                    items:
                      type: string
                    type: array
                  role:
                    description: Role to use for authenticating to Vault.
                    type: string
                  serviceAccount:
                    description: ServiceAccount to use when creating a ServiceAccount
                      token to authenticate to Vault's JWT authentication backend.
                    type: string
                  token:
                    description: Token to use when authenticating to Vault's JWT authentication
                      backend.
                    type: string
                  tokenExpirationSeconds:
                    default: 600
                    description: TokenExpirationSeconds to set the ServiceAccount
                      token.
                    format: int64
                    minimum: 600
                    type: integer
                required:
                - role
                type: object
              kubernetes:
                description: Kubernetes specific auth configuration, requires that
                  the Method be set to kubernetes.
                properties:
                  audiences:
                    description: TokenAudiences to include in the ServiceAccount token.
                    items:
                      type: string
                    type: array
                  role:
                    description: Role to use for authenticating to Vault.
                    type: string
                  serviceAccount:
                    description: ServiceAccount to use when authenticating to Vault's
                      kubernetes authentication backend.
                    type: string
                  tokenExpirationSeconds:
                    default: 600
                    description: TokenExpirationSeconds to set the ServiceAccount
                      token.
                    format: int64
                    minimum: 600
                    type: integer
                required:
                - role
                - serviceAccount
                type: object
              method:
                description: Method to use when authenticating to Vault.
                enum:
                - kubernetes
                - approle
                type: string
              mount:
                description: Mount to use when authenticating to auth method.
                type: string
              namespace:
                description: Namespace to auth to in Vault
                type: string
              params:
                additionalProperties:
                  type: string
                description: Params to use when authenticating to Vault
                type: object
              storageEncryption:
                description: 'StorageEncryption provides the necessary configuration
                  to encrypt the client storage cache. This should only be configured
                  when client cache persistence with encryption is enabled. This is
                  done by passing setting the manager''s commandline argument --client-cache-persistence-model=direct-encrypted
                  Typically there should only ever be one VaultAuth configured with
                  StorageEncryption in the Cluster, and it should have the the label:
                  cacheStorageEncryption=true'
                properties:
                  keyName:
                    description: KeyName to use for encrypt/decrypt operations via
                      Vault Transit.
                    type: string
                  mount:
                    description: Mount path of the Transit engine in Vault.
                    type: string
                required:
                - keyName
                - mount
                type: object
              vaultConnectionRef:
                description: VaultConnectionRef of the corresponding VaultConnection
                  CustomResource. If no value is specified the Operator will default
                  to the `default` VaultConnection, configured in its own Kubernetes
                  namespace.
                type: string
            required:
            - method
            - mount
            type: object
          status:
            description: VaultAuthStatus defines the observed state of VaultAuth
            properties:
              error:
                type: string
              valid:
                description: Valid auth mechanism.
                type: boolean
            required:
            - error
            - valid
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
